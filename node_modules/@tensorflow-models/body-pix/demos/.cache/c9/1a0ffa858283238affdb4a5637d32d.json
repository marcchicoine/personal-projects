{"id":"SV6U","dependencies":[{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu.js.map","includedInParent":true,"mtime":1613524214681},{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/src/kernels/Relu.ts","includedInParent":true,"mtime":1613524214681},{"name":"/Users/linazhao/tf/models/body-pix/demos/package.json","includedInParent":true,"mtime":1613671076017},{"name":"/Users/linazhao/tf/models/body-pix/demos/.babelrc","includedInParent":true,"mtime":1608229350283},{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":1613524214681},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":21},"parent":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu.js","resolved":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"../kernel_utils/kernel_funcs_utils","loc":{"line":18,"column":32},"parent":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu.js","resolved":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js"},{"name":"../unaryop_gpu","loc":{"line":19,"column":34},"parent":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu.js","resolved":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.reluConfig=exports.relu=void 0;var e=require(\"@tensorflow/tfjs-core\"),r=require(\"../kernel_utils/kernel_funcs_utils\"),n=require(\"../unaryop_gpu\");const u=n.CHECK_NAN_SNIPPET+\"\\n  return (x < 0.0) ? 0.0 : x;\\n\",s=\"\\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n\",t=(0,r.unaryKernelFunc)({opSnippet:u,packedOpSnippet:s});exports.relu=t;const l={kernelName:e.Relu,backendName:\"webgl\",kernelFunc:t};exports.reluConfig=l;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":0}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":13}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":20}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":35}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":43}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":56}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":57}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":64}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":68}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":76}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":87}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":95}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":105}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":107}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":111}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":113}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":121}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":146}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":148}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":156}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":194}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":196}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":204}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":222}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":22,"column":6},"generated":{"line":1,"column":228}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":22,"column":13},"generated":{"line":1,"column":230}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":22,"column":33},"generated":{"line":1,"column":232}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":22,"column":33},"generated":{"line":1,"column":250}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":1,"column":286}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":1,"column":288}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":1,"column":561}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":1,"column":564}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":39,"column":20},"generated":{"line":1,"column":566}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":39,"column":20},"generated":{"line":1,"column":568}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":39,"column":20},"generated":{"line":1,"column":585}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":39,"column":21},"generated":{"line":1,"column":586}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":39,"column":32},"generated":{"line":1,"column":596}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":39,"column":38},"generated":{"line":1,"column":598}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":39,"column":55},"generated":{"line":1,"column":614}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":618}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":626}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":631}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":633}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":13},"generated":{"line":1,"column":639}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":40},"generated":{"line":1,"column":641}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":1,"column":642}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":42,"column":14},"generated":{"line":1,"column":653}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":40},"generated":{"line":1,"column":655}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":1,"column":660}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":43,"column":15},"generated":{"line":1,"column":672}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":680}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":44,"column":14},"generated":{"line":1,"column":691}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":694}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":702}},{"source":"../../src/kernels/Relu.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":1,"column":713}}],"sources":{"../../src/kernels/Relu.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Relu} from '@tensorflow/tfjs-core';\nimport {unaryKernelFunc} from '../kernel_utils/kernel_funcs_utils';\nimport {CHECK_NAN_SNIPPET} from '../unaryop_gpu';\n\nconst RELU = CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : x;\n`;\n\nconst RELU_PACKED = `\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n`;\n\nexport const relu =\n    unaryKernelFunc({opSnippet: RELU, packedOpSnippet: RELU_PACKED});\n\nexport const reluConfig: KernelConfig = {\n  kernelName: Relu,\n  backendName: 'webgl',\n  kernelFunc: relu as {} as KernelFunc\n};\n"},"lineCount":null}},"error":null,"hash":"992ba3eca89f2f9a80798f8c4fafbad0","cacheData":{"env":{}}}
{"id":"cxva","dependencies":[{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log.js.map","includedInParent":true,"mtime":1613524214681},{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/src/kernels/Log.ts","includedInParent":true,"mtime":1613524214681},{"name":"/Users/linazhao/tf/models/body-pix/demos/package.json","includedInParent":true,"mtime":1613671076017},{"name":"/Users/linazhao/tf/models/body-pix/demos/.babelrc","includedInParent":true,"mtime":1608229350283},{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":1613524214681},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":20},"parent":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log.js","resolved":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"../kernel_utils/kernel_funcs_utils","loc":{"line":18,"column":32},"parent":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log.js","resolved":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js"},{"name":"../kernel_utils/shared","loc":{"line":19,"column":27},"parent":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log.js","resolved":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.logConfig=exports.log=void 0;var e=require(\"@tensorflow/tfjs-core\"),r=require(\"../kernel_utils/kernel_funcs_utils\"),l=require(\"../kernel_utils/shared\");const n=\"if (x < 0.0) return NAN;\\n  return log(x);\",s=\"\\n  vec4 result = log(x);\\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\\n\\n  return result;\\n\",t=(0,r.unaryKernelFunc)({opSnippet:n,packedOpSnippet:s,cpuKernelImpl:l.logImplCPU});exports.log=t;const u={kernelName:e.Log,backendName:\"webgl\",kernelFunc:t};exports.logConfig=u;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":0}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":13}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":20}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":35}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":43}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":56}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":57}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":64}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":68}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":76}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":86}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":94}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":103}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":105}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":109}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":111}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":119}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":144}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":146}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":154}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":192}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":194}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":202}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":228}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":22,"column":6},"generated":{"line":1,"column":234}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":22,"column":12},"generated":{"line":1,"column":236}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":25,"column":6},"generated":{"line":1,"column":281}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":25,"column":19},"generated":{"line":1,"column":283}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":36,"column":13},"generated":{"line":1,"column":567}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":36,"column":19},"generated":{"line":1,"column":570}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":572}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":574}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":591}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":37,"column":5},"generated":{"line":1,"column":592}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":37,"column":16},"generated":{"line":1,"column":602}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":37,"column":21},"generated":{"line":1,"column":604}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":37,"column":38},"generated":{"line":1,"column":620}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":37,"column":50},"generated":{"line":1,"column":622}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":37,"column":65},"generated":{"line":1,"column":636}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":37,"column":65},"generated":{"line":1,"column":638}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":651}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":659}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":663}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":665}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":13},"generated":{"line":1,"column":671}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":39},"generated":{"line":1,"column":673}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":1,"column":674}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":40,"column":14},"generated":{"line":1,"column":685}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":39},"generated":{"line":1,"column":687}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":1,"column":691}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":41,"column":15},"generated":{"line":1,"column":703}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":1,"column":711}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":42,"column":14},"generated":{"line":1,"column":722}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":725}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":733}},{"source":"../../src/kernels/Log.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":743}}],"sources":{"../../src/kernels/Log.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Log} from '@tensorflow/tfjs-core';\nimport {unaryKernelFunc} from '../kernel_utils/kernel_funcs_utils';\nimport {logImplCPU} from '../kernel_utils/shared';\n\nconst LOG = `if (x < 0.0) return NAN;\n  return log(x);`;\n\nconst LOG_PACKED = `\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n`;\n\nexport const log = unaryKernelFunc(\n    {opSnippet: LOG, packedOpSnippet: LOG_PACKED, cpuKernelImpl: logImplCPU});\n\nexport const logConfig: KernelConfig = {\n  kernelName: Log,\n  backendName: 'webgl',\n  kernelFunc: log as {} as KernelFunc\n};\n"},"lineCount":null}},"error":null,"hash":"5a7362f31ca4d1c7a8243d1e14bdb579","cacheData":{"env":{}}}
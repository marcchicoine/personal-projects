{"id":"MEci","dependencies":[{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js.map","includedInParent":true,"mtime":1613524214681},{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/src/binaryop_packed_gpu.ts","includedInParent":true,"mtime":1613524214681},{"name":"/Users/linazhao/tf/models/body-pix/demos/package.json","includedInParent":true,"mtime":1613671076017},{"name":"/Users/linazhao/tf/models/body-pix/demos/.babelrc","includedInParent":true,"mtime":1608229350283},{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":1613524214681},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":35},"parent":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js","resolved":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"./packing_util","loc":{"line":18,"column":28},"parent":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js","resolved":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js"},{"name":"./shader_compiler","loc":{"line":19,"column":34},"parent":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js","resolved":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.BinaryOpPackedProgram=exports.NOT_EQUAL=exports.ELU_DER=exports.CHECK_NAN_SNIPPET=void 0;var t=require(\"@tensorflow/tfjs-core\"),e=require(\"./packing_util\"),s=require(\"./shader_compiler\");const r=\"\\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\";exports.CHECK_NAN_SNIPPET=r;const n=\"\\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\\n\";exports.ELU_DER=n;const o=\"\\n  return vec4(notEqual(a, b));\\n\";exports.NOT_EQUAL=o;class u{constructor(r,n,o,u=!1){this.variableNames=[\"A\",\"B\"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.backend_util.assertAndGetBroadcastShape(n,o);const a=this.outputShape.length;let l=\"\";if(u)if(0===a||1===t.util.sizeFromShape(this.outputShape))l=\"\\n          result.y = 0.;\\n          result.z = 0.;\\n          result.w = 0.;\\n        \";else{if(l=`\\n          ${(0,s.getCoordsDataType)(a)} coords = getOutputCoords();\\n        `,1===a)l+=`\\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\\n            result.z = 0.;\\n            result.w = 0.;\\n          `;else{const t=(0,e.getChannels)(\"coords\",a);l+=`\\n            bool nextRowOutOfBounds =\\n              (${t[a-2]} + 1) >= ${this.outputShape[a-2]};\\n            bool nextColOutOfBounds =\\n              (${t[a-1]} + 1) >= ${this.outputShape[a-1]};\\n            result.y = nextColOutOfBounds ? 0. : result.y;\\n            result.z = nextRowOutOfBounds ? 0. : result.z;\\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\\n          `}}this.userCode=`\\n      vec4 binaryOperation(vec4 a, vec4 b) {\\n        ${r}\\n      }\\n\\n      void main() {\\n        vec4 a = getAAtOutCoords();\\n        vec4 b = getBAtOutCoords();\\n\\n        vec4 result = binaryOperation(a, b);\\n        ${l}\\n\\n        setOutput(result);\\n      }\\n    `}}exports.BinaryOpPackedProgram=u;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":0}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":13}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":20}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":35}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":43}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":56}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":57}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":64}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":68}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":76}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":98}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":106}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":116}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":124}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":132}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":140}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":163}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":165}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":169}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":171}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":179}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":204}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":206}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":214}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":232}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":234}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":242}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":24,"column":7},"generated":{"line":1,"column":263}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":24,"column":13},"generated":{"line":1,"column":269}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":24,"column":33},"generated":{"line":1,"column":271}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":456}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":464}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":482}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":31,"column":7},"generated":{"line":1,"column":484}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":31,"column":13},"generated":{"line":1,"column":490}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":31,"column":23},"generated":{"line":1,"column":492}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":630}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":638}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":646}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":648}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":36,"column":13},"generated":{"line":1,"column":654}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":36,"column":25},"generated":{"line":1,"column":656}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":693}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":701}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":711}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":6},"generated":{"line":1,"column":713}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":13},"generated":{"line":1,"column":719}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":48,"column":2},"generated":{"line":1,"column":721}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":1,"column":733}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":1,"column":735}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":49,"column":36},"generated":{"line":1,"column":737}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":50,"column":6},"generated":{"line":1,"column":739}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":50,"column":25},"generated":{"line":1,"column":742}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":1,"column":745}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":1,"column":750}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":41,"column":18},"generated":{"line":1,"column":764}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":41,"column":19},"generated":{"line":1,"column":765}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":41,"column":24},"generated":{"line":1,"column":769}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":774}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":779}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":44,"column":25},"generated":{"line":1,"column":801}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":1,"column":803}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":1,"column":808}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":45,"column":17},"generated":{"line":1,"column":822}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":1,"column":824}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":1,"column":829}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":46,"column":17},"generated":{"line":1,"column":843}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":51,"column":9},"generated":{"line":1,"column":845}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":51,"column":9},"generated":{"line":1,"column":850}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":51,"column":23},"generated":{"line":1,"column":862}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":51,"column":36},"generated":{"line":1,"column":864}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":51,"column":36},"generated":{"line":1,"column":877}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":51,"column":63},"generated":{"line":1,"column":904}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":51,"column":71},"generated":{"line":1,"column":906}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":52,"column":10},"generated":{"line":1,"column":909}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":52,"column":10},"generated":{"line":1,"column":915}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":52,"column":17},"generated":{"line":1,"column":917}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":52,"column":22},"generated":{"line":1,"column":922}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":52,"column":34},"generated":{"line":1,"column":934}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":1,"column":941}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":1,"column":945}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":53,"column":33},"generated":{"line":1,"column":947}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":1,"column":950}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":1,"column":953}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":55,"column":10},"generated":{"line":1,"column":955}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":55,"column":19},"generated":{"line":1,"column":958}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":55,"column":10},"generated":{"line":1,"column":962}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":55,"column":65},"generated":{"line":1,"column":965}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":55,"column":24},"generated":{"line":1,"column":969}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":55,"column":29},"generated":{"line":1,"column":971}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":55,"column":29},"generated":{"line":1,"column":976}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":55,"column":43},"generated":{"line":1,"column":990}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":55,"column":48},"generated":{"line":1,"column":995}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":56,"column":8},"generated":{"line":1,"column":1008}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":56,"column":33},"generated":{"line":1,"column":1010}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":61,"column":13},"generated":{"line":1,"column":1105}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":66,"column":12},"generated":{"line":1,"column":1106}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":63,"column":8},"generated":{"line":1,"column":1109}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":62,"column":22},"generated":{"line":1,"column":1127}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":62,"column":40},"generated":{"line":1,"column":1129}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":62,"column":40},"generated":{"line":1,"column":1131}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":62,"column":40},"generated":{"line":1,"column":1150}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":66,"column":21},"generated":{"line":1,"column":1193}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":66,"column":12},"generated":{"line":1,"column":1197}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":67,"column":10},"generated":{"line":1,"column":1199}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":68,"column":41},"generated":{"line":1,"column":1246}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":68,"column":46},"generated":{"line":1,"column":1251}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":68,"column":58},"generated":{"line":1,"column":1263}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":72,"column":15},"generated":{"line":1,"column":1357}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":73,"column":16},"generated":{"line":1,"column":1358}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":73,"column":16},"generated":{"line":1,"column":1364}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":73,"column":27},"generated":{"line":1,"column":1367}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":73,"column":39},"generated":{"line":1,"column":1369}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":73,"column":39},"generated":{"line":1,"column":1371}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":73,"column":39},"generated":{"line":1,"column":1384}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":73,"column":49},"generated":{"line":1,"column":1393}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":74,"column":10},"generated":{"line":1,"column":1396}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":76,"column":17},"generated":{"line":1,"column":1458}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":76,"column":26},"generated":{"line":1,"column":1460}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":76,"column":33},"generated":{"line":1,"column":1462}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":76,"column":47},"generated":{"line":1,"column":1476}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":76,"column":52},"generated":{"line":1,"column":1481}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":76,"column":64},"generated":{"line":1,"column":1493}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":76,"column":71},"generated":{"line":1,"column":1495}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":78,"column":17},"generated":{"line":1,"column":1557}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":78,"column":26},"generated":{"line":1,"column":1559}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":78,"column":33},"generated":{"line":1,"column":1561}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":78,"column":47},"generated":{"line":1,"column":1575}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":78,"column":52},"generated":{"line":1,"column":1580}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":78,"column":64},"generated":{"line":1,"column":1592}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":78,"column":71},"generated":{"line":1,"column":1594}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":87,"column":9},"generated":{"line":1,"column":1815}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":87,"column":9},"generated":{"line":1,"column":1820}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":89,"column":10},"generated":{"line":1,"column":1888}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":97,"column":10},"generated":{"line":1,"column":2056}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":2106}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":2114}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":40,"column":34},"generated":{"line":1,"column":2136}}],"sources":{"../src/binaryop_packed_gpu.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, util} from '@tensorflow/tfjs-core';\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getChannels} from './packing_util';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport const CHECK_NAN_SNIPPET = `\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n`;\n\nexport const ELU_DER = `\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n`;\n\nexport const NOT_EQUAL = `\n  return vec4(notEqual(a, b));\n`;\n\nexport class BinaryOpPackedProgram implements GPGPUProgram {\n  variableNames = ['A', 'B'];\n  outputShape: number[];\n  userCode: string;\n  supportsBroadcasting = true;\n  packedInputs = true;\n  packedOutput = true;\n\n  constructor(\n      op: string, aShape: number[], bShape: number[],\n      checkOutOfBounds = false) {\n    this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n    const rank = this.outputShape.length;\n    let checkOutOfBoundsString = '';\n    if (checkOutOfBounds) {\n      if (rank === 0 || util.sizeFromShape(this.outputShape) === 1) {\n        checkOutOfBoundsString = `\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        `;\n      } else {\n        const dtype = getCoordsDataType(rank);\n        checkOutOfBoundsString = `\n          ${dtype} coords = getOutputCoords();\n        `;\n        if (rank === 1) {\n          checkOutOfBoundsString += `\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;\n        } else {\n          const channels = getChannels('coords', rank);\n          checkOutOfBoundsString += `\n            bool nextRowOutOfBounds =\n              (${channels[rank - 2]} + 1) >= ${this.outputShape[rank - 2]};\n            bool nextColOutOfBounds =\n              (${channels[rank - 1]} + 1) >= ${this.outputShape[rank - 1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `;\n        }\n      }\n    }\n\n    this.userCode = `\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${op}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${checkOutOfBoundsString}\n\n        setOutput(result);\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"c4dcdb2190a9e8481e36767627dcc846","cacheData":{"env":{}}}
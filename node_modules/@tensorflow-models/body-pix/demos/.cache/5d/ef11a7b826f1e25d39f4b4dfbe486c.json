{"id":"VA1I","dependencies":[{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-core/dist/ops/split.js.map","includedInParent":true,"mtime":1613521243129},{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-core/src/ops/split.ts","includedInParent":true,"mtime":1613521243129},{"name":"/Users/linazhao/tf/models/body-pix/demos/package.json","includedInParent":true,"mtime":1613671076017},{"name":"/Users/linazhao/tf/models/body-pix/demos/.babelrc","includedInParent":true,"mtime":1608229350283},{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1613521243129},{"name":"../engine","loc":{"line":17,"column":23},"parent":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-core/dist/ops/split.js","resolved":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-core/dist/engine.js"},{"name":"../kernel_names","loc":{"line":18,"column":23},"parent":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-core/dist/ops/split.js","resolved":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-core/dist/kernel_names.js"},{"name":"../tensor_util_env","loc":{"line":19,"column":32},"parent":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-core/dist/ops/split.js","resolved":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js"},{"name":"./operation","loc":{"line":20,"column":19},"parent":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-core/dist/ops/split.js","resolved":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-core/dist/ops/operation.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.split=void 0;var e=require(\"../engine\"),r=require(\"../kernel_names\"),t=require(\"../tensor_util_env\"),i=require(\"./operation\");function n(i,n,s=0){const o={x:(0,t.convertToTensor)(i,\"x\",\"split\")},p={numOrSizeSplits:n,axis:s};return e.ENGINE.runKernel(r.SplitV,o,p)}const s=(0,i.op)({split_:n});exports.split=s;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":0}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":13}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":20}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":35}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":43}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":56}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":57}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":64}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":68}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":76}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":87}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":89}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":93}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":95}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":103}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":116}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":118}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":126}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":145}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":147}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":155}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":177}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":179}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":187}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":1,"column":202}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":62,"column":9},"generated":{"line":1,"column":211}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":1,"column":213}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":63,"column":26},"generated":{"line":1,"column":215}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":63,"column":60},"generated":{"line":1,"column":217}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":63,"column":67},"generated":{"line":1,"column":219}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":64,"column":8},"generated":{"line":1,"column":222}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":66,"column":8},"generated":{"line":1,"column":228}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":66,"column":31},"generated":{"line":1,"column":230}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":66,"column":32},"generated":{"line":1,"column":231}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":64,"column":13},"generated":{"line":1,"column":234}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":64,"column":29},"generated":{"line":1,"column":236}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":64,"column":29},"generated":{"line":1,"column":238}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":64,"column":29},"generated":{"line":1,"column":255}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":64,"column":32},"generated":{"line":1,"column":257}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":64,"column":37},"generated":{"line":1,"column":261}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":67,"column":8},"generated":{"line":1,"column":271}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":67,"column":28},"generated":{"line":1,"column":273}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":67,"column":29},"generated":{"line":1,"column":274}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":67,"column":29},"generated":{"line":1,"column":290}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":67,"column":46},"generated":{"line":1,"column":292}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":67,"column":46},"generated":{"line":1,"column":297}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":1,"column":300}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":1,"column":307}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":69,"column":16},"generated":{"line":1,"column":309}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":69,"column":16},"generated":{"line":1,"column":316}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":70,"column":13},"generated":{"line":1,"column":326}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":1,"column":328}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":70,"column":21},"generated":{"line":1,"column":335}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":71,"column":13},"generated":{"line":1,"column":337}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":340}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":13},"generated":{"line":1,"column":346}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":21},"generated":{"line":1,"column":349}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":24},"generated":{"line":1,"column":351}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":24},"generated":{"line":1,"column":353}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":24},"generated":{"line":1,"column":357}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":25},"generated":{"line":1,"column":358}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":25},"generated":{"line":1,"column":365}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":369}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":377}},{"source":"../../src/ops/split.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":1,"column":383}}],"sources":{"../../src/ops/split.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {SplitV, SplitVAttrs, SplitVInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Splits a `tf.Tensor` into sub tensors.\n *\n * If `numOrSizeSplits` is a number, splits `x` along dimension `axis`\n * into `numOrSizeSplits` smaller tensors.\n * Requires that `numOrSizeSplits` evenly divides `x.shape[axis]`.\n *\n * If `numOrSizeSplits` is a number array, splits `x` into\n * `numOrSizeSplits.length` pieces. The shape of the `i`-th piece has the\n * same size as `x` except along dimension `axis` where the size is\n * `numOrSizeSplits[i]`.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8], [2, 4]);\n * const [a, b] = tf.split(x, 2, 1);\n * a.print();\n * b.print();\n *\n * const [c, d, e] = tf.split(x, [1, 2, 1], 1);\n * c.print();\n * d.print();\n * e.print();\n * ```\n *\n * @param x The input tensor to split.\n * @param numOrSizeSplits Either an integer indicating the number of\n * splits along the axis or an array of integers containing the sizes of\n * each output tensor along the axis. If a number then it must evenly divide\n * `x.shape[axis]`; otherwise the sum of sizes must match `x.shape[axis]`.\n * Can contain one -1 indicating that dimension is to be inferred.\n * @param axis The dimension along which to split. Defaults to 0 (the first\n * dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction split_<T extends Tensor>(\n    x: Tensor|TensorLike, numOrSizeSplits: number[]|number, axis = 0): T[] {\n  const $x = convertToTensor(x, 'x', 'split');\n\n  const inputs: SplitVInputs = {x: $x};\n  const attr: SplitVAttrs = {numOrSizeSplits, axis};\n\n  return ENGINE.runKernel(\n             SplitV, inputs as {} as NamedTensorMap,\n             attr as {} as NamedAttrMap) as {} as T[];\n}\n\nexport const split = op({split_});\n"},"lineCount":null}},"error":null,"hash":"c4da700f9c8001fae4ef9a8e0f49ef02","cacheData":{"env":{}}}
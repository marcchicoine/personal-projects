{"id":"node_modules/@tensorflow-models/body-pix/saved_models.js","dependencies":[{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow-models/body-pix/saved_models.js.map","includedInParent":true,"mtime":1613671120606},{"name":"/Users/linazhao/tf/models/body-pix/demos/package.json","includedInParent":true,"mtime":1613671076017},{"name":"/Users/linazhao/tf/models/body-pix/demos/.babelrc","includedInParent":true,"mtime":1608229350283}],"generated":{"js":"\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RESNET50_BASE_URL = 'https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/';\nvar MOBILENET_BASE_URL = 'https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/';\n// The BodyPix 2.0 ResNet50 models use the latest TensorFlow.js 1.0 model\n// format.\nfunction resNet50SavedModel(stride, quantBytes) {\n    var graphJson = \"model-stride\" + stride + \".json\";\n    // quantBytes=4 corresponding to the non-quantized full-precision SavedModel.\n    if (quantBytes === 4) {\n        return RESNET50_BASE_URL + \"float/\" + graphJson;\n    }\n    else {\n        return RESNET50_BASE_URL + (\"quant\" + quantBytes + \"/\") + graphJson;\n    }\n}\nexports.resNet50SavedModel = resNet50SavedModel;\n// The BodyPix 2.0 MobileNetV1 models use the latest TensorFlow.js 1.0 model\n// format.\nfunction mobileNetSavedModel(stride, multiplier, quantBytes) {\n    var toStr = { 1.0: '100', 0.75: '075', 0.50: '050' };\n    var graphJson = \"model-stride\" + stride + \".json\";\n    // quantBytes=4 corresponding to the non-quantized full-precision SavedModel.\n    if (quantBytes === 4) {\n        return MOBILENET_BASE_URL + (\"float/\" + toStr[multiplier] + \"/\") + graphJson;\n    }\n    else {\n        return MOBILENET_BASE_URL + (\"quant\" + quantBytes + \"/\" + toStr[multiplier] + \"/\") +\n            graphJson;\n    }\n}\nexports.mobileNetSavedModel = mobileNetSavedModel;\n"},"sourceMaps":{"js":{"version":3,"file":"saved_models.js","sourceRoot":"","sources":["../src/saved_models.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;AAEH,IAAM,iBAAiB,GACnB,yEAAyE,CAAC;AAC9E,IAAM,kBAAkB,GACpB,0EAA0E,CAAC;AAE/E,yEAAyE;AACzE,UAAU;AACV,SAAgB,kBAAkB,CAAC,MAAc,EAAE,UAAkB;IACnE,IAAM,SAAS,GAAG,iBAAe,MAAM,UAAO,CAAC;IAC/C,6EAA6E;IAC7E,IAAI,UAAU,KAAK,CAAC,EAAE;QACpB,OAAO,iBAAiB,GAAG,QAAQ,GAAG,SAAS,CAAC;KACjD;SAAM;QACL,OAAO,iBAAiB,IAAG,UAAQ,UAAU,MAAG,CAAA,GAAG,SAAS,CAAC;KAC9D;AACH,CAAC;AARD,gDAQC;AAED,4EAA4E;AAC5E,UAAU;AACV,SAAgB,mBAAmB,CAC/B,MAAc,EAAE,UAAkB,EAAE,UAAkB;IACxD,IAAM,KAAK,GAA4B,EAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAC,CAAC;IAC9E,IAAM,SAAS,GAAG,iBAAe,MAAM,UAAO,CAAC;IAC/C,6EAA6E;IAC7E,IAAI,UAAU,KAAK,CAAC,EAAE;QACpB,OAAO,kBAAkB,IAAG,WAAS,KAAK,CAAC,UAAU,CAAC,MAAG,CAAA,GAAG,SAAS,CAAC;KACvE;SAAM;QACL,OAAO,kBAAkB,IAAG,UAAQ,UAAU,SAAI,KAAK,CAAC,UAAU,CAAC,MAAG,CAAA;YAClE,SAAS,CAAC;KACf;AACH,CAAC;AAXD,kDAWC","sourcesContent":[null]}},"error":null,"hash":"e6a7a7326b3dbfc17ce28d428a49ac1e","cacheData":{"env":{}}}
{"id":"zpON","dependencies":[{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/dist/dilation_gpu.js.map","includedInParent":true,"mtime":1613524214681},{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/src/dilation_gpu.ts","includedInParent":true,"mtime":1613524214681},{"name":"/Users/linazhao/tf/models/body-pix/demos/package.json","includedInParent":true,"mtime":1613671076017},{"name":"/Users/linazhao/tf/models/body-pix/demos/.babelrc","includedInParent":true,"mtime":1608229350283},{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":1613524214681}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Dilation2DProgram=void 0;class n{constructor(n){this.variableNames=[\"x\",\"W\"],this.outputShape=n.outShape;const{inHeight:t,inWidth:i,padInfo:e,strideHeight:o,strideWidth:r,filterHeight:a,filterWidth:s,dilationHeight:l,dilationWidth:d}=n,{top:h,left:c}=e;this.userCode=`\\n      const ivec2 strides = ivec2(${o}, ${r});\\n      const ivec2 pads = ivec2(${h}, ${c});\\n      const float neg_infinity = -3.4e38;\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d1 = coords.w;\\n        ivec2 outTopLeftCorner =\\n            coords.yz * strides - pads;\\n        int hBeg = outTopLeftCorner.x;\\n        int wBeg = outTopLeftCorner.y;\\n\\n        float curVal = neg_infinity;\\n        for (int h = 0; h < ${a}; h++) {\\n          int hIn = hBeg + h * ${l};\\n\\n          if (hIn >= 0 && hIn < ${t}) {\\n            for (int w = 0; w < ${s}; w++) {\\n              int wIn = wBeg + w * ${d};\\n\\n              if (wIn >= 0 && wIn < ${i}) {\\n                float xVal = getX(batch, hIn, wIn, d1);\\n                float wVal = getW(h, w, d1);\\n\\n                float val = xVal + wVal;\\n                if (val > curVal) {\\n                  curVal = val;\\n                }\\n              }\\n            }\\n          }\\n        }\\n\\n        float result = curVal;\\n        setOutput(result);\\n      }\\n    `}}exports.Dilation2DProgram=n;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":1,"column":0}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":1,"column":13}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":1,"column":20}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":1,"column":35}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":1,"column":43}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":1,"column":56}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":1,"column":57}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":1,"column":64}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":1,"column":68}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":1,"column":76}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":1,"column":99}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":1,"column":101}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":1,"column":107}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":109}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":26,"column":14},"generated":{"line":1,"column":121}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":124}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":129}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":1,"column":143}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":22,"column":19},"generated":{"line":1,"column":144}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":22,"column":24},"generated":{"line":1,"column":148}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":1,"column":153}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":1,"column":158}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":27,"column":23},"generated":{"line":1,"column":170}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":27,"column":32},"generated":{"line":1,"column":172}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":181}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":187}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":1,"column":196}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":198}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":1,"column":206}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":208}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":1,"column":216}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":218}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":231}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":233}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":34,"column":6},"generated":{"line":1,"column":245}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":247}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":1,"column":260}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":262}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":1,"column":274}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":276}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":1,"column":291}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":293}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":1,"column":307}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":39,"column":8},"generated":{"line":1,"column":310}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":41,"column":11},"generated":{"line":1,"column":313}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":41,"column":16},"generated":{"line":1,"column":317}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":41,"column":24},"generated":{"line":1,"column":319}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":41,"column":30},"generated":{"line":1,"column":324}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":41,"column":41},"generated":{"line":1,"column":327}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":43,"column":9},"generated":{"line":1,"column":329}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":43,"column":9},"generated":{"line":1,"column":334}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":44,"column":36},"generated":{"line":1,"column":382}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":44,"column":53},"generated":{"line":1,"column":388}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":45,"column":33},"generated":{"line":1,"column":427}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":45,"column":44},"generated":{"line":1,"column":433}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":58,"column":30},"generated":{"line":1,"column":832}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":59,"column":33},"generated":{"line":1,"column":877}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":61,"column":34},"generated":{"line":1,"column":918}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":62,"column":34},"generated":{"line":1,"column":959}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":63,"column":37},"generated":{"line":1,"column":1008}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":65,"column":38},"generated":{"line":1,"column":1053}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":1,"column":1430}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":1,"column":1438}},{"source":"../src/dilation_gpu.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":1,"column":1456}}],"sources":{"../src/dilation_gpu.ts":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class Dilation2DProgram implements GPGPUProgram {\n  variableNames = ['x', 'W'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: backend_util.Conv2DInfo) {\n    this.outputShape = convInfo.outShape;\n\n    const {\n      inHeight,\n      inWidth,\n      padInfo,\n      strideHeight,\n      strideWidth,\n      filterHeight,\n      filterWidth,\n      dilationHeight,\n      dilationWidth\n    } = convInfo;\n\n    const {top: padTop, left: padLeft} = padInfo;\n\n    this.userCode = `\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${filterHeight}; h++) {\n          int hIn = hBeg + h * ${dilationHeight};\n\n          if (hIn >= 0 && hIn < ${inHeight}) {\n            for (int w = 0; w < ${filterWidth}; w++) {\n              int wIn = wBeg + w * ${dilationWidth};\n\n              if (wIn >= 0 && wIn < ${inWidth}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"b57d74181004da6de26cfa664fcbc5f2","cacheData":{"env":{}}}
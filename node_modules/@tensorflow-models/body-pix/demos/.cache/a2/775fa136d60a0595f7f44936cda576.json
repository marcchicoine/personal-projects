{"id":"node_modules/@tensorflow-models/body-pix/util.js","dependencies":[{"name":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow-models/body-pix/util.js.map","includedInParent":true,"mtime":1613671120630},{"name":"/Users/linazhao/tf/models/body-pix/demos/package.json","includedInParent":true,"mtime":1613671076017},{"name":"/Users/linazhao/tf/models/body-pix/demos/.babelrc","includedInParent":true,"mtime":1608229350283},{"name":"@tensorflow/tfjs-core","loc":{"line":56,"column":17},"parent":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow-models/body-pix/util.js","resolved":"/Users/linazhao/tf/models/body-pix/demos/node_modules/@tensorflow/tfjs-core/dist/index.js"}],"generated":{"js":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tf = require(\"@tensorflow/tfjs-core\");\nfunction getSizeFromImageLikeElement(input) {\n    if (input.offsetHeight !== 0 && input.offsetWidth !== 0) {\n        return [input.offsetHeight, input.offsetWidth];\n    }\n    else if (input.height != null && input.width != null) {\n        return [input.height, input.width];\n    }\n    else {\n        throw new Error(\"HTMLImageElement must have height and width attributes set.\");\n    }\n}\nfunction getSizeFromVideoElement(input) {\n    if (input.hasAttribute('height') && input.hasAttribute('width')) {\n        // Prioritizes user specified height and width.\n        // We can't test the .height and .width properties directly,\n        // because they evaluate to 0 if unset.\n        return [input.height, input.width];\n    }\n    else {\n        return [input.videoHeight, input.videoWidth];\n    }\n}\nfunction getInputSize(input) {\n    if ((typeof (HTMLCanvasElement) !== 'undefined' &&\n        input instanceof HTMLCanvasElement) ||\n        (typeof (HTMLImageElement) !== 'undefined' &&\n            input instanceof HTMLImageElement)) {\n        return getSizeFromImageLikeElement(input);\n    }\n    else if (typeof (ImageData) !== 'undefined' && input instanceof ImageData) {\n        return [input.height, input.width];\n    }\n    else if (typeof (HTMLVideoElement) !== 'undefined' &&\n        input instanceof HTMLVideoElement) {\n        return getSizeFromVideoElement(input);\n    }\n    else if (input instanceof tf.Tensor) {\n        return [input.shape[0], input.shape[1]];\n    }\n    else {\n        throw new Error(\"error: Unknown input type: \" + input + \".\");\n    }\n}\nexports.getInputSize = getInputSize;\nfunction isValidInputResolution(resolution, outputStride) {\n    return (resolution - 1) % outputStride === 0;\n}\nfunction toValidInputResolution(inputResolution, outputStride) {\n    if (isValidInputResolution(inputResolution, outputStride)) {\n        return inputResolution;\n    }\n    return Math.floor(inputResolution / outputStride) * outputStride + 1;\n}\nexports.toValidInputResolution = toValidInputResolution;\nvar INTERNAL_RESOLUTION_STRING_OPTIONS = {\n    low: 'low',\n    medium: 'medium',\n    high: 'high',\n    full: 'full'\n};\nvar INTERNAL_RESOLUTION_PERCENTAGES = (_a = {},\n    _a[INTERNAL_RESOLUTION_STRING_OPTIONS.low] = 0.25,\n    _a[INTERNAL_RESOLUTION_STRING_OPTIONS.medium] = 0.5,\n    _a[INTERNAL_RESOLUTION_STRING_OPTIONS.high] = 0.75,\n    _a[INTERNAL_RESOLUTION_STRING_OPTIONS.full] = 1.0,\n    _a);\nvar MIN_INTERNAL_RESOLUTION = 0.1;\nvar MAX_INTERNAL_RESOLUTION = 2.0;\nfunction toInternalResolutionPercentage(internalResolution) {\n    if (typeof internalResolution === 'string') {\n        var result = INTERNAL_RESOLUTION_PERCENTAGES[internalResolution];\n        tf.util.assert(typeof result === 'number', function () { return \"string value of inputResolution must be one of \" + Object.values(INTERNAL_RESOLUTION_STRING_OPTIONS)\n            .join(',') + \" but was \" + internalResolution + \".\"; });\n        return result;\n    }\n    else {\n        tf.util.assert(typeof internalResolution === 'number' &&\n            internalResolution <= MAX_INTERNAL_RESOLUTION &&\n            internalResolution >= MIN_INTERNAL_RESOLUTION, function () {\n            return \"inputResolution must be a string or number between \" + MIN_INTERNAL_RESOLUTION + \" and \" + MAX_INTERNAL_RESOLUTION + \", but \" +\n                (\"was \" + internalResolution);\n        });\n        return internalResolution;\n    }\n}\nfunction toInputResolutionHeightAndWidth(internalResolution, outputStride, _a) {\n    var inputHeight = _a[0], inputWidth = _a[1];\n    var internalResolutionPercentage = toInternalResolutionPercentage(internalResolution);\n    return [\n        toValidInputResolution(inputHeight * internalResolutionPercentage, outputStride),\n        toValidInputResolution(inputWidth * internalResolutionPercentage, outputStride)\n    ];\n}\nexports.toInputResolutionHeightAndWidth = toInputResolutionHeightAndWidth;\nfunction toInputTensor(input) {\n    return input instanceof tf.Tensor ? input : tf.browser.fromPixels(input);\n}\nexports.toInputTensor = toInputTensor;\nfunction resizeAndPadTo(imageTensor, _a, flipHorizontal) {\n    var targetH = _a[0], targetW = _a[1];\n    if (flipHorizontal === void 0) { flipHorizontal = false; }\n    var _b = imageTensor.shape, height = _b[0], width = _b[1];\n    var targetAspect = targetW / targetH;\n    var aspect = width / height;\n    var resizeW;\n    var resizeH;\n    var padL;\n    var padR;\n    var padT;\n    var padB;\n    if (aspect > targetAspect) {\n        // resize to have the larger dimension match the shape.\n        resizeW = targetW;\n        resizeH = Math.ceil(resizeW / aspect);\n        var padHeight = targetH - resizeH;\n        padL = 0;\n        padR = 0;\n        padT = Math.floor(padHeight / 2);\n        padB = targetH - (resizeH + padT);\n    }\n    else {\n        resizeH = targetH;\n        resizeW = Math.ceil(targetH * aspect);\n        var padWidth = targetW - resizeW;\n        padL = Math.floor(padWidth / 2);\n        padR = targetW - (resizeW + padL);\n        padT = 0;\n        padB = 0;\n    }\n    var resizedAndPadded = tf.tidy(function () {\n        // resize to have largest dimension match image\n        var resized;\n        if (flipHorizontal) {\n            resized = tf.image.resizeBilinear(tf.reverse(imageTensor, 1), [resizeH, resizeW]);\n        }\n        else {\n            resized = tf.image.resizeBilinear(imageTensor, [resizeH, resizeW]);\n        }\n        var padded = tf.pad3d(resized, [[padT, padB], [padL, padR], [0, 0]]);\n        return padded;\n    });\n    return { resizedAndPadded: resizedAndPadded, paddedBy: [[padT, padB], [padL, padR]] };\n}\nexports.resizeAndPadTo = resizeAndPadTo;\nfunction scaleAndCropToInputTensorShape(tensor, _a, _b, _c, applySigmoidActivation) {\n    var inputTensorHeight = _a[0], inputTensorWidth = _a[1];\n    var resizedAndPaddedHeight = _b[0], resizedAndPaddedWidth = _b[1];\n    var _d = _c[0], padT = _d[0], padB = _d[1], _e = _c[1], padL = _e[0], padR = _e[1];\n    if (applySigmoidActivation === void 0) { applySigmoidActivation = false; }\n    return tf.tidy(function () {\n        var inResizedAndPadded = tf.image.resizeBilinear(tensor, [resizedAndPaddedHeight, resizedAndPaddedWidth], true);\n        if (applySigmoidActivation) {\n            inResizedAndPadded = tf.sigmoid(inResizedAndPadded);\n        }\n        return removePaddingAndResizeBack(inResizedAndPadded, [inputTensorHeight, inputTensorWidth], [[padT, padB], [padL, padR]]);\n    });\n}\nexports.scaleAndCropToInputTensorShape = scaleAndCropToInputTensorShape;\nfunction removePaddingAndResizeBack(resizedAndPadded, _a, _b) {\n    var originalHeight = _a[0], originalWidth = _a[1];\n    var _c = _b[0], padT = _c[0], padB = _c[1], _d = _b[1], padL = _d[0], padR = _d[1];\n    return tf.tidy(function () {\n        var batchedImage = tf.expandDims(resizedAndPadded);\n        return tf.squeeze(tf.image\n            .cropAndResize(batchedImage, [[\n                padT / (originalHeight + padT + padB - 1.0),\n                padL / (originalWidth + padL + padR - 1.0),\n                (padT + originalHeight - 1.0) /\n                    (originalHeight + padT + padB - 1.0),\n                (padL + originalWidth - 1.0) / (originalWidth + padL + padR - 1.0)\n            ]], [0], [originalHeight, originalWidth]), [0]);\n    });\n}\nexports.removePaddingAndResizeBack = removePaddingAndResizeBack;\nfunction resize2d(tensor, resolution, nearestNeighbor) {\n    return tf.tidy(function () {\n        var batchedImage = tf.expandDims(tensor, 2);\n        return tf.squeeze(tf.image.resizeBilinear(batchedImage, resolution, nearestNeighbor));\n    });\n}\nexports.resize2d = resize2d;\nfunction padAndResizeTo(input, _a) {\n    var targetH = _a[0], targetW = _a[1];\n    var _b = getInputSize(input), height = _b[0], width = _b[1];\n    var targetAspect = targetW / targetH;\n    var aspect = width / height;\n    var _c = [0, 0, 0, 0], padT = _c[0], padB = _c[1], padL = _c[2], padR = _c[3];\n    if (aspect < targetAspect) {\n        // pads the width\n        padT = 0;\n        padB = 0;\n        padL = Math.round(0.5 * (targetAspect * height - width));\n        padR = Math.round(0.5 * (targetAspect * height - width));\n    }\n    else {\n        // pads the height\n        padT = Math.round(0.5 * ((1.0 / targetAspect) * width - height));\n        padB = Math.round(0.5 * ((1.0 / targetAspect) * width - height));\n        padL = 0;\n        padR = 0;\n    }\n    var resized = tf.tidy(function () {\n        var imageTensor = toInputTensor(input);\n        imageTensor = tf.pad3d(imageTensor, [[padT, padB], [padL, padR], [0, 0]]);\n        return tf.image.resizeBilinear(imageTensor, [targetH, targetW]);\n    });\n    return { resized: resized, padding: { top: padT, left: padL, right: padR, bottom: padB } };\n}\nexports.padAndResizeTo = padAndResizeTo;\nfunction toTensorBuffers3D(tensors) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, Promise.all(tensors.map(function (tensor) { return tensor.buffer(); }))];\n        });\n    });\n}\nexports.toTensorBuffers3D = toTensorBuffers3D;\nfunction scalePose(pose, scaleY, scaleX, offsetY, offsetX) {\n    if (offsetY === void 0) { offsetY = 0; }\n    if (offsetX === void 0) { offsetX = 0; }\n    return {\n        score: pose.score,\n        keypoints: pose.keypoints.map(function (_a) {\n            var score = _a.score, part = _a.part, position = _a.position;\n            return ({\n                score: score,\n                part: part,\n                position: {\n                    x: position.x * scaleX + offsetX,\n                    y: position.y * scaleY + offsetY\n                }\n            });\n        })\n    };\n}\nexports.scalePose = scalePose;\nfunction scalePoses(poses, scaleY, scaleX, offsetY, offsetX) {\n    if (offsetY === void 0) { offsetY = 0; }\n    if (offsetX === void 0) { offsetX = 0; }\n    if (scaleX === 1 && scaleY === 1 && offsetY === 0 && offsetX === 0) {\n        return poses;\n    }\n    return poses.map(function (pose) { return scalePose(pose, scaleY, scaleX, offsetY, offsetX); });\n}\nexports.scalePoses = scalePoses;\nfunction flipPoseHorizontal(pose, imageWidth) {\n    return {\n        score: pose.score,\n        keypoints: pose.keypoints.map(function (_a) {\n            var score = _a.score, part = _a.part, position = _a.position;\n            return ({\n                score: score,\n                part: part,\n                position: { x: imageWidth - 1 - position.x, y: position.y }\n            });\n        })\n    };\n}\nexports.flipPoseHorizontal = flipPoseHorizontal;\nfunction flipPosesHorizontal(poses, imageWidth) {\n    if (imageWidth <= 0) {\n        return poses;\n    }\n    return poses.map(function (pose) { return flipPoseHorizontal(pose, imageWidth); });\n}\nexports.flipPosesHorizontal = flipPosesHorizontal;\nfunction scaleAndFlipPoses(poses, _a, _b, padding, flipHorizontal) {\n    var height = _a[0], width = _a[1];\n    var inputResolutionHeight = _b[0], inputResolutionWidth = _b[1];\n    var scaleY = (height + padding.top + padding.bottom) / (inputResolutionHeight);\n    var scaleX = (width + padding.left + padding.right) / (inputResolutionWidth);\n    var scaledPoses = scalePoses(poses, scaleY, scaleX, -padding.top, -padding.left);\n    if (flipHorizontal) {\n        return flipPosesHorizontal(scaledPoses, width);\n    }\n    else {\n        return scaledPoses;\n    }\n}\nexports.scaleAndFlipPoses = scaleAndFlipPoses;\n"},"sourceMaps":{"js":{"version":3,"file":"util.js","sourceRoot":"","sources":["../src/util.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"e7937d7529f62014d7d4a9bbf557ba47","cacheData":{"env":{}}}